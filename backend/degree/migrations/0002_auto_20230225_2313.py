# Generated by Django 3.2.18 on 2023-02-26 04:13

from django.db import migrations, models
import django.utils.timezone


class Migration(migrations.Migration):

    dependencies = [
        ('courses', '0054_alter_ngssrestriction_inclusive'),
        ('degree', '0001_initial'),
    ]

    operations = [
        migrations.AddField(
            model_name='degreefulfillment',
            name='status',
            field=models.IntegerField(choices=[(1, 'Taken'), (2, 'In Progress'), (3, 'Planned')], help_text='\nThe way in which this requirement is satisfied.  This is a string, and can be one of the\nfollowing:\n<table width=100%><tr><td>"TAKEN"</td><td>"course has already been taken"</td></tr><tr><td>"IN_PROGRESS"</td><td>"course is currently in progress (in the current semester)"</td></tr><tr><td>"PLANNED"</td><td>"course is planned for the future"</td></tr></table>', null=True),
        ),
        migrations.AddField(
            model_name='degreeplan',
            name='notes',
            field=models.TextField(default='', help_text="\nUsed to store any notes about the degree (for instance, the superscript notes on Penn's Catalog)\n"),
        ),
        migrations.AddField(
            model_name='degreerequirement',
            name='created_at',
            field=models.DateTimeField(auto_now_add=True, default=django.utils.timezone.now),
            preserve_default=False,
        ),
        migrations.AddField(
            model_name='degreerequirement',
            name='num',
            field=models.IntegerField(help_text='\nThe number of CUs or Courses required to satisfy this requirement\n', null=True),
        ),
        migrations.AddField(
            model_name='degreerequirement',
            name='q',
            field=models.TextField(help_text='\nUsed to store more complex & larger query sets using the same interface as Q() objects. Not null if and only iff\ncourses is blank/empty.\n', max_length=1000, null=True),
        ),
        migrations.AddField(
            model_name='degreerequirement',
            name='satisfied_by',
            field=models.IntegerField(choices=[(1, 'All'), (2, 'Cus'), (3, 'Num Courses')], help_text='\nThe way in which this requirement is satisfied.  This is a string, and can be one of the\nfollowing:\n<table width=100%><tr><td>"ALL"</td><td>"Not an actual satisfied by mode: represented by NUM_COURSES where num = number of courses. Must take all courses to satisfy requirements"</td></tr><tr><td>"ANY"</td><td>"Not an actual satisfied by mode: represented by NUM_COURSES where num = 1. Can take any course to satisfy requirements."</td></tr><tr><td>"CUS"</td><td>"Must take courses with total number of CUs to satisfy requirements"</td></tr><tr><td>"NUM_COURSES"</td><td>"Must take a certain number of courses to satisfy requirements"</td></tr></table>', null=True),
        ),
        migrations.AddField(
            model_name='degreerequirement',
            name='updated_at',
            field=models.DateTimeField(auto_now=True),
        ),
        migrations.AlterField(
            model_name='degree',
            name='name',
            field=models.CharField(help_text='\nThe name of this degree\n', max_length=255, unique=True),
        ),
        migrations.AlterField(
            model_name='degreefulfillment',
            name='semester',
            field=models.CharField(db_index=True, help_text='\nThe academic semester this degree fulfillment is applicable to, like `2021C`.\n', max_length=5),
        ),
        migrations.AlterField(
            model_name='degreerequirement',
            name='name',
            field=models.TextField(help_text='\nThe name of the requirement.\n'),
        ),
        migrations.AlterField(
            model_name='degreerequirement',
            name='topics',
            field=models.ManyToManyField(blank=True, help_text='\nCourse objects which have this requirement.\n', related_name='requirements', to='courses.Topic'),
        ),
        migrations.AlterUniqueTogether(
            name='degreerequirement',
            unique_together={('name', 'degree')},
        ),
        migrations.RemoveField(
            model_name='degreerequirement',
            name='inclusive',
        ),
        migrations.RemoveField(
            model_name='degreerequirement',
            name='num_courses',
        ),
        migrations.RemoveField(
            model_name='degreerequirement',
            name='num_credits',
        ),
        migrations.RemoveField(
            model_name='degreerequirement',
            name='semester',
        ),
    ]
